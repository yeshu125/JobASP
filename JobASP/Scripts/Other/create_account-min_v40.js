var pair = new Array(); var staticDataHash = new Array(); var eduStreamData; var catRoleData; var prteObj; var catLocArray = new Array(); var fancyItems = new Array(); var HINT = { EMAILID: { HINT_TEXT: MSG.EMAIL, FIELD_NAME: "email" }, FNAME: { HINT_TEXT: MSG.EXP_FNAME, FIELD_NAME: "firstName" }, PASS: { HINT_TEXT: MSG.EXP_PASS, FIELD_NAME: "passwd" }, CUR_NATIONALITY: { FIELD_NAME: "nationality" }, CLOCATION: { HINT_TEXT: MSG.EXP_CUR_LOC, FIELD_NAME: "currentloc" }, OTHLOCATION: { FIELD_NAME: "other_currentloc" }, PR_STATUS: { FIELD_NAME: "prstatus" }, MOBILE_NO: { HINT_TEXT: MSG.EXP_MOBILE, FIELD_NAME: "mobile" }, GENDER1: { FIELD_NAME: "gender" }, WORK_EXP: { FIELD_NAME: "exp_in_years" }, CUR_INDUSTRY: { HINT_TEXT: MSG.EXP_JOB_IND, FIELD_NAME: "industry" }, CATEGORY: { HINT_TEXT: MSG.EXP_JOB_CAT, FIELD_NAME: "jobCategory" }, SKILLS: { HINT_TEXT: MSG.EXP_KEY_SKILLS, FIELD_NAME: "keySkills" }, ACCPRIVACY: { FIELD_NAME: "accept_privacy" }, RTITLE: { HINT_TEXT: MSG.TITLE, FIELD_NAME: "resume_title" }, WRESUME: { HINT_TEXT: MSG.WRESUME, FIELD_NAME: "wordresume" }, DRESUME: { HINT_TEXT: MSG.DRESUME, FIELD_NAME: "det_resume" }, DJOBTYPE: { FIELD_NAME: "jobType" }, USERTYPE: { FIELD_NAME: "userType" }, HIGH_QULY: { FIELD_NAME: "highest_degree" }, INSTITUTE: { FIELD_NAME: "highest_institute" }, DISABILITY_TYPE: { FIELD_NAME: "infirm_type" }, DISABILITY_SUBTYPE: { FIELD_NAME: "infirm_SubType1" }, OTHSUBTYPE: { FIELD_NAME: "other_sub_type" }, DOB: { FIELD_NAME: "birthday" } }; var JS_ERROR = { email: { VALIDATION: [{ FIELD_NAME: "email", VALIDATE_TYPE: ["NOT_NULL"], MSG: MSG.ERR_EMAIL }, { FIELD_NAME: "email", VALIDATE_TYPE: ["VALID_EMAIL"], MSG: MSG.ERR_EMAIL1 }, { FIELD_NAME: "email", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "fraudUsers();", MSG: MSG.ERR_EMAIL2 }], ERR_ID: "ERR_EMAIL" }, firstName: { VALIDATION: [{ FIELD_NAME: "firstName", VALIDATE_TYPE: ["NOT_NULL"], MSG: MSG.ERR_FNAME }, { FIELD_NAME: "firstName", VALIDATE_TYPE: ["MAX_CHAR_LEN:50"], MSG: MSG.ERR_FNAME2 }], ERR_ID: "ERR_FNAME" }, passwd: { VALIDATION: [{ FIELD_NAME: "passwd", VALIDATE_TYPE: ["NOT_NULL"], MSG: MSG.ERR_PSSWD }, { FIELD_NAME: "passwd", VALIDATE_TYPE: ["MIN_CHAR_LEN:4"], MSG: MSG.ERR_PSSWD1 }, { FIELD_NAME: "passwd", VALIDATE_TYPE: ["MAX_CHAR_LEN:32"], MSG: MSG.ERR_PSSWD2 }, { FIELD_NAME: "passwd", VALIDATE_TYPE: ["NOT_START_WITH_SPACE"], MSG: MSG.ERR_PSSWD3 }, { FIELD_NAME: "passwd", VALIDATE_TYPE: ["NOT_END_WITH_SPACE"], MSG: MSG.ERR_PSSWD3 }], ERR_ID: "ERR_PASS" }, mobile: { VALIDATION: [{ FIELD_NAME: "mobile", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkMobile()", MSG: MSG.ERR_PHONE1 }, { FIELD_NAME: "mobile", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "mobilenumber()", MSG: MSG.ERR_PHONE1 }], ERR_ID: "ERR_MOBILE" }, currentloc: { VALIDATION: [{ FIELD_NAME: "currentloc", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "curOrOtherLoc()", MSG: MSG.ERR_LOC }], ERR_ID: "ERR_CURLOC" }, other_currentloc: { VALIDATION: [{ FIELD_NAME: "other_currentloc", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "specifyOthCurLoc()", MSG: MSG.ERR_OTHERLLOC }], ERR_ID: "ERR_OTH_CURLOC" }, nationality: { VALIDATION: [{ FIELD_NAME: "nationality", VALIDATE_TYPE: ["MIN_SELECTED:1"], MSG: MSG.ERR_NATIONALITY }, { FIELD_NAME: "nationality", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "Chknationality()", MSG: MSG.ERR_NATIONALITY }], ERR_ID: "ERR_NATIONALITY" }, gender: { VALIDATION: [{ FIELD_NAME: "gender", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "genderCheck()", MSG: MSG.ERR_GENDER }], ERR_ID: "ERR_GENDER1" }, exp_in_years: { VALIDATION: [{ FIELD_NAME: "exp_in_years", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "totalExpCheck()", MSG: MSG.ERR_EXPMONTH }], ERR_ID: "ERR_WORK_EXP" }, industry: { VALIDATION: [{ FIELD_NAME: "industry", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "industry_mandatroryORnot()", MSG: MSG.ERR_INDUSTRY }, { FIELD_NAME: "industry", VALIDATE_TYPE: ["MAX_SELECTED:2"], MSG: MSG.ERR_INDUSTRY1 }], ERR_ID: "ERR_INDUS" }, jobCategory: { VALIDATION: [{ FIELD_NAME: "jobCategory", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "Chkcategeory()", MSG: MSG.ERR_CAT }], ERR_ID: "ERR_JOBCAT" }, keySkills: { VALIDATION: [{ FIELD_NAME: "keySkills", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "keySkillsChk()", MSG: MSG.ERR_SKILL }], ERR_ID: "ERR_KEYSKILL" }, resume_title: { VALIDATION: [{ FIELD_NAME: "resume_title", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkresumetitle()", MSG: MSG.ERR_TITLE }], ERR_ID: "ERR_RTITLE" }, wordresume: { VALIDATION: [{ FIELD_NAME: "wordresume", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkresumeEXT()", MSG: MSG.ERR_WRESUME }], ERR_ID: "ERR_WRESUME" }, det_resume: { VALIDATION: [{ FIELD_NAME: "det_resume", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkresume()", MSG: MSG.ERR_DRESUME }, { FIELD_NAME: "det_resume", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkresumeLength()", MSG: MSG.ERR_DRESUME1 }], ERR_ID: "ERR_DRESUME" }, jobType: { VALIDATION: [{ FIELD_NAME: "jobType", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkjobtype()", MSG: MSG.ERR_JOBTYPE }], ERR_ID: "ERR_DJOBTYPE" }, userType: { VALIDATION: [{ FIELD_NAME: "userType", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkusertype()", MSG: "Please select User Type." }], ERR_ID: "ERR_USERTYPE" }, highest_degree: { VALIDATION: [{ FIELD_NAME: "highest_degree", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkhighest_degree()", MSG: "Please select Highest Qualifaction" }], ERR_ID: "ERR_HIGH_QULY" }, birthday: { VALIDATION: [{ FIELD_NAME: "birthday", VALIDATE_TYPE: ["NOT_NULL"], MSG: MSG.ERR_DOB }, { FIELD_NAME: "birthday", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "dobCheck()", MSG: MSG.ERR_DOB1 }], ERR_ID: "ERR_DOB" } }; JS_ERROR.prstatus = { VALIDATION: [{ FIELD_NAME: "prstatus", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "prstatusChk()", MSG: MSG.ERR_PRSTATUS }], ERR_ID: "ERR_PR_STATUS" }; JS_ERROR.accept_privacy = { VALIDATION: [{ FIELD_NAME: "accept_privacy", VALIDATE_TYPE: ["NOT_NULL"], MSG: MSG.ERR_PRIVACY }], ERR_ID: "ERR_ACCPRIVACY" }; if (Mons.ALLIANCE_R2O == "CII" && scid == 1) { JS_ERROR.infirm_type = { VALIDATION: [{ FIELD_NAME: "infirm_type", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkinfirm_type()", MSG: "Please select Disabilty Type" }], ERR_ID: "ERR_TYPE" }; JS_ERROR.infirm_SubType1 = { VALIDATION: [{ FIELD_NAME: "infirm_SubType1", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkinfirm_subtype()", MSG: "Please select Disabilty Sub Type" }], ERR_ID: "ERR_SUBTYPE" }; JS_ERROR.other_sub_type = { VALIDATION: [{ FIELD_NAME: "other_sub_type", VALIDATE_TYPE: ["IS_VALID_BY_FUNC"], CHK_VALID_FUNC: "chkinfirm_other_subtype()", MSG: "Please select Disabilty Sub Type" }], ERR_ID: "ERR_OTHER_SUB_TYPE" } } $(document).ready(function () { jQuery(".copresume_btn").click(function () { jQuery(".copy_resume").slideToggle() }); jQuery("#emailmsg_close").click(function () { jQuery(".emailmsg").slideUp() }); jQuery("#emailinput").focusout(function () { jQuery(".emailmsg").slideDown() }); jQuery("#mobile").focusout(function () { jQuery(".pop_bg").fadeIn(function () { jQuery("#mobilepopup").fadeIn() }) }); jQuery(".pop_close").click(function () { jQuery("#" + jQuery(this).data("popid")).fadeOut(function () { jQuery(".pop_bg").fadeOut() }) }); jQuery(".reg_accord_main.collapsed").click(function () { var A = jQuery(this).position().top; jQuery("html, body").animate({ scrollTop: (parseInt(A) - parseInt(80)) + "px" }, 500); jQuery(this).removeClass("collapsed"); jQuery("#" + jQuery(this).data("id")).slideDown() }); jQuery(document).on("click", ".radiolabel", function () { if (!jQuery(this).hasClass("active")) { jQuery(this).siblings(".active").removeClass("active"); jQuery(this).addClass("active"); jQuery("#" + jQuery(this).data("id")).click() } }); $(".pass_input").blur(function () { if ($(this).val() == "") { if ($(this).hasClass("pass")) { $(this).hide(); $(".pass_text").show() } } }); $(".pass_input").focus(function () { if ($(this).val() == $(this).data("val") || $(this).val() == TAGMSG.passwd) { if ($(this).hasClass("pass_text")) { $(this).hide(); $(".pass").show().focus() } } }) }); jQuery(window).load(function () { var A = 300; jQuery(".btm_bubbles").each(function () { var B = jQuery(this); A = A + 300; setTimeout(function () { B.css({ opacity: "0", top: "40px" }).show(); B.animate({ top: "0px", opacity: "1" }, 300) }, A) }); createAllCombo(); loadData(); jQuery(document).on("click", ".option_item", function (C) { C.preventDefault(); var B = jQuery(this).data("value"); jQuery("#" + B).text(jQuery(this).text()); jQuery("#" + B + "_val").val(jQuery(this).data("id")).change(); jQuery(".single_select[data-id='parent_" + B + "']").slideUp() }); jQuery(document).click(function (B) { if (!jQuery(B.target).parents("div").hasClass("open_singleselect")) { jQuery(".single_select").hide() } }) }); function createAllCombo() { createIndustryCombo(); createFunctionCombo(); createTotalExperienceCombo(); createJobtypeCombo(); if (scid == 1 && Mons.ALLIANCE_R2O == "CII") { createCategoryCombo(); createDisabiltiyTypeCombo() } if (scid == 2 && collegeFlg) { createHighestEduCombo() } } function createCategoryCombo() { createSingleSelectCombo({ id: "infirm_category", valueVariableName: "infirm_category", preSelected: INFIRM_CAT_VAL, label: "Category", replaceWithId: "infirm_category_container", width: "500", options: [{ id: "", values: "Category" }, { id: "gen", values: "Gen" }, { id: "sc", values: "SC" }, { id: "obc", values: "OBC" }, { id: "st", values: "ST" }], animateScroll: true }) } function createDisabiltiyTypeCombo() { setTimeout(function () { var A = { ID: "", NAME: "Type of Disability" }; disability_map_json[0].unshift(A); createSingleSelectCombo({ id: "infirm_type", valueVariableName: "infirm_type", preSelected: disable_type, label: "", replaceWithId: "infirm_type_container", width: "500", options: wrapper(disability_map_json[0]) }); jQuery("input[name='infirm_type']").on("change", function () { getSubTypeCombo(jQuery(this).val()) }) }, 26) } function getSubTypeCombo(A) { var B = "{}"; B = disability_map_json[A]; if (B) { B.sort(function (E, D) { return E.ID - D.ID }); if (B[0] && B[0].ID != "") { var C = { ID: "0", NAME: "Sub Type of Disability" }; B.unshift(C) } jQuery("#sub_infirmity_container_p").show(); jQuery("#ud_other_detail_container").hide(); jQuery("#infirm_SubType1_container").html(""); jQuery("#detail_infirmity_container_p").hide(); createSingleSelectCombo({ id: "infirm_SubType1", valueVariableName: "infirm_SubType1", preSelected: disable_subtype1, label: "", replaceWithId: "infirm_SubType1_container", width: "140", options: wrapper(B) }); jQuery("input[name='infirm_SubType1']").on("change", function () { getSubTypeDetailCombo(jQuery(this).val()) }) } else { if (A == "4") { jQuery("#infirm_SubType1_container").html(""); jQuery("#sub_infirmity_container_p").hide(); jQuery("#infirm_SubType1_container").html(""); jQuery("#detail_infirmity_container_p").hide(); jQuery("#other_sub_type").val(""); jQuery("#ud_other_detail_container").hide() } else { jQuery("#infirm_SubType1_container").html(""); jQuery("#sub_infirmity_container_p").hide(); jQuery("#infirm_SubType1_container").html(""); jQuery("#detail_infirmity_container_p").hide() } } if (A) { hintEvent("DISABILITY_TYPE", "HIDE") } } function getSubTypeDetailCombo(A) { var B = "{}"; B = disability_map_json[A]; if (B) { B.sort(function (E, D) { return E.ID - D.ID }); if (B[0] && B[0].ID != "") { var C = { ID: "0", NAME: "Detail of Disability" }; B.unshift(C) } jQuery("#detail_infirmity_container_p").show(); jQuery("#ud_other_detail_container").hide(); createSingleSelectCombo({ id: "infirm_SubType2", valueVariableName: "infirm_SubType2", preSelected: disable_subtype2, label: "", replaceWithId: "infirm_SubType2_container", width: "140", options: wrapper(B) }); jQuery("input[name='infirm_SubType2']").on("change", function () { getFinal_detailSubType(jQuery(this).val()) }) } else { if (A == "8" || A == "13") { jQuery("#ud_other_detail_container").show(); jQuery("#other_sub_type").parent().css({ width: "330px" }) } else { } } if (A) { hintEvent("DISABILITY_SUBTYPE", "HIDE") } } function getFinal_detailSubType(A) { if (A == 21 || A == 24 || A == 29) { jQuery("#ud_other_detail_container").show() } } function createIndustryCombo() { var A = wrapper_indcatrole(indcatrole, topRolesOfInd); if (glassdoor == 1) { createCombo({ id: "ind", preSelected: COMBO_DATA.INDUSTRY_VAl, label: MSG.INDUSTRY, valueVariableName: "industry", replaceWithId: "industry_container", width: "300", height: "250", industry: A.industryA, labelCountMsg: " #COUNT# Industry(s) selected", tabindex: "13", monstab: "13", onlyAllData: "true", divwidth: "300", numColumns: "1", onChange: validateIndCatRole }) } else { createCombo({ id: "ind", preSelected: COMBO_DATA.INDUSTRY_VAl, label: MSG.INDUSTRY, valueVariableName: "industry", replaceWithId: "industry_container", width: "500", height: "250", industry: A.industryA, labelCountMsg: " #COUNT# Industry(s) selected", tabindex: "13", monstab: "13", onlyAllData: "true", divwidth: "500", numColumns: "1", onChange: validateIndCatRole }) } } function createFunctionCombo() { var A = new Array(); for (var B = 0; B < catRoleData.length; B++) { A.push({ id: catRoleData[B].id, values: catRoleData[B].name }) } if (glassdoor == 1) { createCombo({ id: "cat", preSelected: COMBO_DATA.CATEGORY_VAl, label: MSG.FUNCTION, innerLabel: "", valueVariableName: "jobCategory", replaceWithId: "jobCategory_container", width: "300", height: "200", industry: A, labelCountMsg: " #COUNT# Function(s) selected", tabindex: "14", monstab: "14", onlyAllData: "true", divwidth: "500", numColumns: "1", onChange: validateIndCatRole }) } else { createCombo({ id: "cat", preSelected: COMBO_DATA.CATEGORY_VAl, label: MSG.FUNCTION, innerLabel: "", valueVariableName: "jobCategory", replaceWithId: "jobCategory_container", width: "500", height: "200", industry: A, labelCountMsg: " #COUNT# Function(s) selected", tabindex: "14", monstab: "14", onlyAllData: "true", divwidth: "500", numColumns: "1", onChange: validateIndCatRole }) } jQuery("#jobCategory_container .dropdown_small_wrapper ").addClass("req") } function createTotalExperienceCombo() { var B = new Array(); B.push({ id: "", values: "Select Year" }); B.push({ id: "0", values: "0" }); for (i = 1; i <= 50; i++) { var A = new Object(); A.id = i; A.values = i; B.push(A) } if (glassdoor == 1) { createSingleSelectCombo({ id: "exp_in_years", valueVariableName: "exp_in_years", tabindex: "8", monstab: "8", label: MSG.TOTAL_EXP, replaceWithId: "exp_in_years_container", width: "300", numColumns: "1", heightOptions: "height:120px; overflow-y:auto", options: B, preSelected: COMBO_DATA.EXP, tabindex: "12", monstab: "12" }) } else { createSingleSelectCombo({ id: "exp_in_years", valueVariableName: "exp_in_years", tabindex: "8", monstab: "8", label: MSG.TOTAL_EXP, replaceWithId: "exp_in_years_container", width: "240", numColumns: "1", heightOptions: "height:120px; overflow-y:auto", options: B, preSelected: COMBO_DATA.EXP, tabindex: "12", monstab: "12" }) } jQuery("input[name='exp_in_years']").on("change", function () { hintEvent("WORK_EXP", "HIDE") }); jQuery("#exp_in_years_container .dropdown_smaller_wrapper").addClass("req") } function createNationalityCombo() { createSingleSelectCombo({ id: "nationality", tabindex: "5", monstab: "5", label: MSG.NATIONALITY, replaceWithId: "nationality_container", valueVariableName: "nationality", width: "500", heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true", options: COMBO_DATA.NATIONAITY, preSelected: COMBO_DATA.NATIONALITY_VAL, animateScroll: true }); jQuery("input[name='nationality']").on("change", function () { jsfornationality() }); jQuery("#nationality_container .dropdown_smaller_wrapper").addClass("req") } function createLocationCombo() { createSingleSelectCombo({ id: "currentloc", tabindex: "6", monstab: "6", label: MSG.CUR_LOC, replaceWithId: "currentloc_container", valueVariableName: "currentloc", width: "500", heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true", options: COMBO_DATA.CURLOCATION, preSelected: COMBO_DATA.CURLOCATION_VAL, animateScroll: true }); jQuery("input[name='currentloc']").on("change", function () { jsforcurLocation() }); jQuery("#currentloc_container .dropdown_smaller_wrapper").addClass("req") } function createJobtypeCombo() { if (glassdoor == 1) { createCombo({ id: "jobType", accordian: "true", tabindex: "53", label: MSG.JOB_TYPE, replaceWithId: "jobType_container", valueVariableName: "jobType", width: "300", height: "200", onlyAllData: "true", tabindex: "11", monstab: "11", industry: COMBO_DATA.JOBTYPE, preSelected: COMBO_DATA.JOBTYPE_VAl, animateScroll: true, numColumns: "1", divWidth: "300" }) } else { createCombo({ id: "jobType", accordian: "true", tabindex: "53", label: MSG.JOB_TYPE, replaceWithId: "jobType_container", valueVariableName: "jobType", width: "240", height: "200", onlyAllData: "true", tabindex: "11", monstab: "11", industry: COMBO_DATA.JOBTYPE, preSelected: COMBO_DATA.JOBTYPE_VAl, animateScroll: true, numColumns: "1", divWidth: "240" }) } if (contract_channel) { jQuery("input[name='jobType']").on("change", function () { hidejobtype() }) } jQuery("#jobType_container .dropdown_smaller_wrapper").addClass("req") } function createHighestEduCombo() { createQualificationCombo("highest_degree", HIGHEST_DEGREE, "Highest Qualification", "highest_specialization"); createPassYearCombo("highest_passYear", HIGHEST_YEARPASS); creaInstituteCombo() } function createPassYearCombo(A, B) { if (B == 0) { B = "" } createSingleSelectCombo({ id: A, valueVariableName: A, preSelected: B, label: "Year of Passing", replaceWithId: A + "_container", width: "250", options: COMBO_DATA.YEARPASS, heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true" }) } function createQualificationCombo(C, E, B, A) { var D = wrapper_education(eduStreamData); if (E == 0) { E = "" } setTimeout(function () { createSingleSelectCombo({ id: C, valueVariableName: C, preSelected: E, label: B, replaceWithId: C + "_container", width: "250", options: COMBO_DATA.EDUCATION, animateScroll: true, numColumns: "1", heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true" }); jQuery("input[name='" + C + "']").on("change", function () { getStreamCombo(jQuery(this).val(), A) }) }, 100) } function creaInstituteCombo() { createSingleSelectCombo({ id: "mcollege", valueVariableName: "mcollege", preSelected: INSTITUTE, label: "Year of Passing", replaceWithId: "mcollege_container", width: "250", options: COMBO_DATA.COLLEGE_DATA, heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true" }) } function getStreamCombo(A, G) { var B = wrapper_education(eduStreamData); var D = B.degSpl; var F = D[A]; var E = []; myhash = new Object(); myhash.id = "0"; myhash.values = "Highest Specialization"; $.each(B.eduSpl, function (I, J) { if ($.inArray(J.id, F) !== -1) { var H = new Object(); val_id = J.id; vals = val_id.split("-"); H.id = vals[1]; H.values = J.values; E.push(H) } }); if (HIGHEST_SPEC == 0) { HIGHEST_SPEC = "" } var C = "Highest Specialization"; if (G != "highest_degree") { C = "Second Highest Specialization" } createSingleSelectCombo({ id: G, valueVariableName: G, preSelected: HIGHEST_SPEC, label: "Highest Specialization", replaceWithId: G + "_container", width: "250", options: E, animateScroll: true, numColumns: "1", heightOptions: "height:180px; overflow-y:auto", onlyAllData: "true" }); hintEvent("HIGH_QULY", "HIDE") } function other_infirmity_type() { var B = fancyItems.infirm_type.getSelected(); var A = disable_otherType("infirm_type", B); if (A) { document.forms.CREATEACCTFORM["other_sub_type"].value = ""; document.getElementById("trOtherSubtype").style.display = "none"; populate_subType1("infirm_type", "infirm_SubType1", "", "selectSubType1", ""); document.getElementById("selectSubType2_tr").style.display = "none"; hintEvent("DISABILITY_TYPE", "HIDE") } } function other_infirmity_subtype() { var C = fancyItems.infirm_SubType1.getSelected(); var A = disable_otherType("infirm_SubType1", C); if (A) { document.forms.CREATEACCTFORM["other_sub_type"].value = ""; populate_subType1("infirm_SubType1", "infirm_SubType2", "", "selectSubType2", ""); document.getElementById("trOtherSubtype").style.display = "none"; hintEvent("DISABILITY_SUBTYPE", "HIDE") } var B = fancyItems.infirm_SubType1.getSelected(); if (B != "") { document.forms.CREATEACCTFORM["fancySubType1"].value = B } } function other_infirmity_subtypelevel() { var B = fancyItems.infirm_SubType2.getSelected(); var A = disable_otherType("infirm_SubType2", B); if (A) { document.forms.CREATEACCTFORM["other_sub_type"].value = ""; document.getElementById("trOtherSubtype").style.display = "none"; hintEvent("DISABILITY_SUBTYPE", "HIDE") } var C = fancyItems.infirm_SubType2.getSelected(); if (C != "") { document.forms.CREATEACCTFORM["fancySubType2"].value = C } } function disable_otherType(F, E) { obj = YAHOO.lang.JSON.parse(json_disable); if (F == "infirm_type") { if (E == obj.TYPE) { $("#selectSubType1_tr").hide(); $("#trOtherSubtype").hide(); $("#selectSubType2_tr").hide(); $("#certificate").closest("tr").hide(); $("#issued_by").closest("tr").hide(); return false } else { $("#certificate").closest("tr").show(); $("#issued_by").closest("tr").show() } } if (F == "infirm_SubType1" || F == "infirm_SubType2") { var A = obj.SUBTYPE1.split("|"); var B = $.grep(A, function (G) { return G == E }); var C = obj.SUBTYPE2.split("|"); var D = $.grep(C, function (G) { return G == E }); if (B.length == 1 || D.length == 1) { $("#trOtherSubtype").show(); if (F == "infirm_SubType1") { $("#selectSubType2_tr").hide() } return false } else { $("#trOtherSubtype").hide() } } if (F == "infirm_SubType1" && E == "" || E == 0) { $("#trOtherSubtype").hide(); $("#selectSubType2_tr").hide() } return true } function chkhighest_degree() { var A = jQuery('input[name="highest_degree"]').val(); if (A == "") { return false } return true } function hidehighestquali() { hintEvent("HIGH_QULY", "HIDE") } function hidejobtype(C) { var B; if (typeof C != "undefined" && typeof C != "object" && C != "") { B = C } else { B = getjobType_checked() } var A = B.split(","); if (B.length > 0) { for (var D = 0; D < A.length; D++) { if (A[D] != "") { if (A[D] == "cont") { jQuery("#contractUsertype").show() } else { jQuery("#contractUsertype").hide() } } } hintEvent("DJOBTYPE", "HIDE") } else { jQuery("#contractUsertype").hide() } } function getjobType_checked() { var A = ""; if ($('input[name="jobType"]:checked').length > 0) { $('input[name="jobType"]:checked').each(function (B, C) { A += C.value + "," }) } return A } function chkjobtype() { var A; A = getjobType_checked(); if ($('input[name="jobType"]:checked').length <= 0) { return false } return true } function chkusertype() { if (document.getElementById("contractUsertype").style.display == "" || document.getElementById("contractUsertype").style.display == "block") { var B = document.forms.CREATEACCTFORM["userType"]; var A = 0; for (var C = 0; C < B.length; C++) { if (B[C].checked) { A = 1 } } if (!A) { return false } else { return true } } } function oauth2login(B) { if (B == "fb") { var C = window.open(fburl, "Login", "top=0,left=0,width=780,height=640,menubar=yes,status=yes,scrollbars=yes,dependent=yes,resizable=yes") } else { if (B == "gm") { var A = window.open(gm_auth_url, "Login", "top=0,left=0,width=780,height=640,menubar=yes,status=yes,scrollbars=yes,dependent=yes,resizable=yes") } else { if (B == "ya") { var D = window.open(yahoo_auth_url, "Login", "top=0,left=0,width=780,height=640,menubar=yes,status=yes,scrollbars=yes,dependent=yes,resizable=yes") } } } } function closeEvent(A) { if (A.stopPropagation) { A.stopPropagation() } else { if (window.event) { window.event.cancelBubble = true } } } function validateIndCatRole() { dispInventry(indus, jobcat, "") } function showerr_exp() { hintEvent("WORK_EXP", "HIDE") } function jsforcurLocation() { checkLocation(); populate_countryname1("change", "", "", "", "location"); populate_isd(loc_codes); hintEvent("CLOCATION", "HIDE") } function jsfornationality() { populate_countryname1("change", "", "", "", "location"); hintEvent("CUR_NATIONALITY", "HIDE") } function funAfterLoading() { return } function logError(D) { var B = D.join("~"); var C = new Array(); C.push("msg+=" + encodeURIComponent(B)); var A = C.join("&"); MJS.AJAX.sendRequest("http://my." + baseserver + "/ajax_log.html", funAfterLoading, A) } var focus_flag = 1; function onSubmitJSChks(C) { focus_flag = 0; var B = true; var A = $(".reg_accord_main.collapsed"); A.removeClass("collapsed"); $("#professional").slideDown(); $("#preference").slideDown(); var H = []; if (jQuery('input[name="birthday"]').val() == TAGMSG.birthday) { jQuery('input[name="birthday"]').val("") } checkAllFields("certificate", "SHOW", 1); checkAllFields("issued_by", "SHOW", 1); show_resume(); for (var D in C) { var G = "SUC"; var F; if (D == "PR_STATUS") { if (document.getElementById("resetPR").style.display != "none") { F = hintEvent(D, "HIDE") } } else { if (D == "USERTYPE") { if (document.getElementById("contractUsertype") && (document.getElementById("contractUsertype").style.display == "block" || document.getElementById("contractUsertype").style.display == "")) { F = hintEvent(D, "HIDE") } } else { F = hintEvent(D, "HIDE") } } if (!F && F != undefined) { G = "ERR"; B = false } if (C[D].FIELD_NAME && document.forms.CREATEACCTFORM[C[D].FIELD_NAME]) { H.push(C[D].FIELD_NAME + ":" + G); var E = MJS.VLD.getValue(document.forms.CREATEACCTFORM[C[D].FIELD_NAME]); H.push(E.join(",")) } } if (B == false) { alert("Fields marked in Red need to be filled.") } return B } function checkAllFields(E, C, D) { C = C ? C : "SHOW"; var B = document.forms.CREATEACCTFORM[E]; if (B && B.type == "text") { var A = $('input[name="' + E + '"]').val(); if (D == 1) { if (A == TAGMSG[E] || A == "") { $('input[name="' + E + '"]').val(""); $('input[name="' + E + '"]').removeClass("placeholder") } } else { if (C == "SHOW") { if (A == TAGMSG[E] || A == "") { $('input[name="' + E + '"]').val(""); $('input[name="' + E + '"]').removeClass("placeholder") } } else { if (C == "HIDE") { if (A == "") { $('input[name="' + E + '"]').addClass("placeholder"); $('input[name="' + E + '"]').val(TAGMSG[E]) } else { if (A == TAGMSG[E]) { $('input[name="' + E + '"]').val(""); $('input[name="' + E + '"]').removeClass("placeholder") } } } } } } } function hintEvent(C, A) { A = A ? A : "SHOW"; var B = "http://media." + baseserver; if (window.location.protocol.indexOf("https:") == 0) { B = "https://media4." + baseserver } if (A == "SHOW" && HINT[C] && HINT[C].HINT_TEXT != null) { checkAllFields(HINT[C].FIELD_NAME, A); jQuery("#" + C).html('<div class="innr">' + HINT[C].HINT_TEXT + "</div>"); jQuery("#" + C).show() } else { if (A == "HIDE" && HINT[C] && document.getElementById(C)) { checkAllFields(HINT[C].FIELD_NAME, A, 1); jQuery("#" + C).hide(); if (!isErrMsg(C)) { checkAllFields(HINT[C].FIELD_NAME, A); return false } else { return true } } else { if (A == "HIDEOUT" && HINT[C] && document.getElementById(C)) { jQuery("#" + C).hide(); return false } } } } function isErrMsg(A) { if (HINT[A].FIELD_NAME) { var B = HINT[A].FIELD_NAME; if (document.CREATEACCTFORM[B] && JS_ERROR[B] != undefined) { var C = JS_ERROR[B].VALIDATION; var E = MJS.VLD.isValidForm({ FRM_OBJ: document.CREATEACCTFORM, FOCUS_OBJ_ON_ERR: 0, IS_ALERT: 0, VALIDATION: C, RET_TYPE: "FIELD_ERR_MSG" }); if (!E.SUCCESS) { var D = B; if (B == "gender" || B == "industry" || B == "jobCategory" || B == "exp_in_years" || B == "prstatus" || B == "jobType" || B == "userType" || B == "womanEmp" || B == "retiredEmp" || B == "highest_degree" || B == "infirm_type" || B == "infirm_SubType1") { D = B + "_container"; if (B == "prstatus") { D = "resetPR" } jQuery("#" + D).addClass("error") } else { if (B == "det_resume") { jQuery(".copy_resume").show(); D = B + "_container"; jQuery("#" + D).addClass("error") } else { if (B == "currentloc") { jQuery("#PLACEHOLDER_combo_location").addClass("error") } else { if (B == "nationality") { jQuery("#PLACEHOLDER_combo_nationality").addClass("error") } else { if (B == "accept_privacy") { jQuery("#accept_privacy_border").addClass("error") } else { if (!jQuery("input[name='" + D + "']").parent().hasClass("error")) { jQuery("input[name='" + D + "']").parent().toggleClass("error") } } } } } } if (JS_ERROR[B]) { jQuery("#" + JS_ERROR[B].ERR_ID).html(E.FIELD_ERR_MSG[B][0]); jQuery("#" + JS_ERROR[B].ERR_ID).show() } if (E.OBJ_TO_FOCUS && focus_flag == 0 && (B != "industry" && B != "jobCategory" && B != "phone" && B != "det_resume" && B != "currentloc" && B != "nationality" && B != "exp_in_months") && (B != "jobType") && (B != "highest_degree") && B != "infirm_type" && B != "infirm_SubType1") { MJS.VLD.focusObj(E.OBJ_TO_FOCUS); focus_flag = 1 } return false } else { if (B == "gender" || B == "industry" || B == "jobCategory" || B == "currentloc" || B == "exp_in_years" || B == "prstatus" || B == "jobType" || B == "userType" || B == "womanEmp" || B == "retiredEmp" || B == "highest_degree" || B == "infirm_type" || B == "infirm_SubType1") { D = B + "_container"; if (B == "prstatus") { D = "resetPR" } jQuery("#" + D).removeClass("error") } else { if (B == "det_resume") { D = B + "_container"; jQuery("#" + D).removeClass("error") } else { if (B == "currentloc") { jQuery("#PLACEHOLDER_combo_location").removeClass("error") } else { if (B == "nationality") { jQuery("#PLACEHOLDER_combo_nationality").removeClass("error") } else { if (B == "accept_privacy") { jQuery("#accept_privacy_border").removeClass("error") } else { jQuery("input[name='" + B + "']").parent().removeClass("error"); jQuery("#" + JS_ERROR[B].ERR_ID).hide() } } } } } jQuery("#" + JS_ERROR[B].ERR_ID).html(""); jQuery("#" + JS_ERROR[B].ERR_ID).hide(); return true } } else { return true } } else { return true } } function initJS() { MJS.SKR.createOverlay({ TAG_ID: "forgotUserPass", OVERLAY_OPTIONS: { fixedcenter: true, visible: false, width: "566px", height: "415px" }, OPEN_ON_CLICK_IDS: ["forgotUsername", "forgotPass"], CLOSE_ON_CLICK_IDS: ["forgotUserPass_close_popup", "forgotUserPass_close_other"] }); populate_countryname1("load", currentloc, nation, prval, "location"); checkLocation(); if ((scid == 1 || scid == 2) && highest_specialization) { populateStream1("highest_degree", "YES", "hightest_specialization", highest_specialization, "selectDrop", "", "resumesub") } if (scid == 1 && Mons.ALLIANCE_R2O == "CII") { if (disable_type) { disable_otherType(disable_type) } if (disable_subtype1 != 0) { getSubTypeCombo(disable_type) } if (disable_subtype2 != 0) { getSubTypeDetailCombo(disable_subtype1) } } womenstatus(); if (contract_channel) { hidejobtype(jobtype) } showUserskills() } function fraudUsers() { var B = jQuery('input[name="email"]').val(); objEmail = document.forms.CREATEACCTFORM["email"]; jQuery("#box1").slideUp(); for (i = 0; i < emailList.length; i++) { if (B.match(emailList[i])) { return false } } var A = 0; for (i = 0; i < domainlist.length; i++) { if (B.match(domainlist[i])) { A = 1; break } } var C = 0; if (uid) { C = 1 } showEmail(A, C); return true } function chkresumetitle() { var C = trim(jQuery('input[name="resume_title"]').val()); if (jQuery('input[name="mandatory"]').val() == 1) { if (C == "") { return false } else { return true } } else { var B = jQuery('input[name="wordresume"]').val(); var A = ""; if (jQuery("#det_resume").length > 0) { A = jQuery("#det_resume").val() } if (C == "" && (B != "" || A != "")) { return false } } return true } function chkresume() { var C = trim(jQuery('input[name="resume_title"]').val()); var B = jQuery('input[name="wordresume"]').val(); var A = ""; if (jQuery("#det_resume").length > 0) { A = jQuery("#det_resume").val() } if (jQuery('input[name="mandatory"]').val() == 1) { if (B == "" && A == "") { return false } else { return true } } return true } function chkresumeEXT() { var A = getExtension(jQuery('input[name="wordresume"]').val()); if ((jQuery('input[name="wordresume"]').val() != "") && A != "doc" && A != "txt" && A != "docx" && A != "rtf" && A != "pdf") { aa = "Please ensure that the file you upload is a word document, .rtf or a .txt file."; return false } else { if (A == "rtf" && scid != 1) { aa = "Please ensure that the file you upload is a word document or a .txt file."; return false } else { if (A == "pdf") { document.CREATEACCTFORM.pdf_email.value = document.CREATEACCTFORM.email.value; var B = []; B.push("Email:" + document.CREATEACCTFORM.pdf_email.value + "\n"); logError(B); return true } else { return true } } } } function getExtension(B) { var A = B.substring(B.lastIndexOf(".") + 1, B.length); return A.toLowerCase() } function chkresumeLength() { var A = trim(document.CREATEACCTFORM.det_resume.value); if ((jQuery('input[name="wordresume"]').val() == "") && (A != "") && (A.length <= 40)) { aa = "The length of the resume, you have pasted here seems to be too short, please include more information."; return false } else { return true } } function show_resume() { if (jQuery('input[name="mandatory"]').val() == 1) { if (jQuery('input[name="wordresume"]').val() == "") { jQuery(".copy_resume").show() } var A = trim(document.CREATEACCTFORM.det_resume.value); if (A) { jQuery(".copy_resume").show() } } } function chkMobile() { var A = jQuery('input[name="mobile"]').val(); var B = trim(A.replace(/^91-/i, "")); if ((B.length < 1)) { return false } else { return true } } function mobilenumber() { var C = jQuery('input[name="mobile"]').val(); var D = trim(C.replace(/^91-/i, "")); if (D.length > 0) { var A = $("#mobile_isd").val(); if (((A && A == 91) || scid == 1) && (D.length > 0)) { var B = mobileVerifyIndia(); if (B == 1) { return false } } else { if ((D.length < 6 && D.length > 0) || (D.length > 0 && !D.match(/[1-9]/))) { return false } else { return true } } return true } else { return false } } function mobileVerifyIndia() { var E = jQuery('input[name="mobile"]').val(); var C = 0; var A = $("#mobile_isd").val(); var B = 16; if (A == 91) { B = 10 } if (E.match(/^\+*91\s*\-*\s*/)) { var D = E.replace(/^\+*91\s*\-+\s*/, ""); D = D.replace(/^\+*/, ""); if ((D.length > 0 && D.length < 10) || (D.length > B) || D.match(/\D/) || (!D.match(/[1-9]/))) { C = 1 } } else { if ((E.length > 0 && E.length < 10) || (E.length > B) || (E.match(/[^\+\-\s0-9]/)) || (!E.match(/[1-9]/))) { C = 1 } } return C } function Chknationality() { var A = jQuery('select[name="nationality"]').val(); if (A == "") { return false } else { return true } } function curOrOtherLoc() { CurLoc = jQuery('select[name="currentloc"]').val(); OthCurLoc = jQuery('input[name="other_currentloc"]').val(); if (CurLoc == "" && trim(OthCurLoc) == "") { return false } else { return true } } function chkinfirm_subtype() { infirmSubType_val = jQuery('input[name="infirm_SubType1"]').val(); infirmType_val = jQuery('input[name="infirm_ype"]').val(); if (infirmType_val != 4 && (infirmSubType_val == 0 || infirmSubType_val == "")) { return false } return true } function chkinfirm_other_subtype() { infirmSubType_val = jQuery('input[name="infirm_SubType1"]').val(); OthInfirmSubType = document.forms.resumesub["other_sub_type"].value; infirmSubType2_val = jQuery('input[name="infirm_SubType2"]').val(); if ((infirmSubType_val == 8 || infirmSubType_val == 13) && trim(OthInfirmSubType) == "") { return false } else { if (infirmSubType_val == 3 && (infirmSubType2_val == 21 || infirmSubType2_val == 24 || infirmSubType2_val == 29) && trim(OthInfirmSubType) == "") { return false } } return true } function chkinfirm_type() { infirmType_val = jQuery('input[name="infirm_type"]').val(); if ((infirmType_val == "" || infirmType_val == 0)) { return false } else { return true } } function specifyOthCurLoc() { var B = jQuery('select[name="currentloc"]').val(); var A = jQuery('input[name="other_currentloc"]').val(); var D = otherIDs.match("\\b" + B + "\\b"); var C = trim(A); var C = C.replace(/^[\s ]+/, ""); if (C == "" && D != "" && D != null) { if (C == "") { return false } } else { return true } } function genderCheck() { objSex = document.forms.CREATEACCTFORM["gender"]; var A = 0; for (var B = 0; B < objSex.length; B++) { if (objSex[B].checked) { A = 1 } } if (!A) { return false } else { return true } } function totalExpCheck() { yval = jQuery('input[name="exp_in_years"]').val(); if (yval == "") { return false } else { return true } } function Chkcategeory() { var A = getfunction_val(); if (A.length) { return true } return false } function getindustry_val() { var A = []; industryVal = ""; if ($('input[name="industry"]:checked').length > 0) { $('input[name="industry"]:checked').each(function (B, C) { A.push(C.value) }); industryVal = A.join(",") } return industryVal } function getfunction_val() { var A = []; functionVal = ""; if ($('input[name="jobCategory"]:checked').length > 0) { $('input[name="jobCategory"]:checked').each(function (B, C) { A.push(C.value) }); functionVal = A.join(",") } return functionVal } function industry_mandatroryORnot() { yval = jQuery('input[name="exp_in_years"]').val(); var A = getindustry_val(); if ((yval != 0 || scid == 5) && A == "") { if ($('input[name="jobCategory"]:checked').length) { return true } return false } else { return true } } function showHideKeySkills() { var B = $("#keySkills").val(); var A = getfunction_val(); if ((parseInt(A.search(itCategory)) >= 0) && !(trim(B.value))) { $("#keySkillsRow").show() } else { $("#keySkillsRow").hide() } } function keySkillsChk() { var A = document.forms.CREATEACCTFORM["keySkills"]; var B = ""; if (jQuery('input[name="all_skill"]').length > 0) { B = jQuery('input[name="all_skill"]').val() } if (!(trim(A.value)) && B == "") { return false } else { return true } } function prstatusChk() { var E = jQuery('select[name="currentloc"]').val(); var D = jQuery('select[name="nationality"]').val(); if ((document.getElementById("resetPR").style.display == "" || document.getElementById("resetPR").style.display == "block") && E != "" && D != "") { objPrStatus = document.forms.CREATEACCTFORM["prstatus"]; var A; if (document.forms.CREATEACCTFORM["prstatus"].length > 1 && document.forms.CREATEACCTFORM["prstatus"][0].type == "radio") { A = "radio" } else { A = document.forms.CREATEACCTFORM["prstatus"].type } if (A == "radio") { var C = 0; for (var B = 0; B < objPrStatus.length; B++) { if (objPrStatus[B].checked) { C = 1 } } if (!C) { return false } else { return true } } else { if (objPrStatus.value == "" || typeof objPrStatus.value == "undefined") { return false } else { return true } } } else { if (document.getElementById("resetPR").style.display == "none") { return true } } } function LTrim(B) { var A = /\s*((\S+\s*)*)/; return B.replace(A, "$1") } function RTrim(B) { var A = /((\s*\S+)*)\s*/; return B.replace(A, "$1") } function trim(A) { return LTrim(RTrim(A)) } function show_hide_area(B) { var A = document.getElementById(B).style.display; if (document.getElementById(B).style.display == "none") { document.getElementById(B).style.display = "" } else { document.getElementById(B).style.display = "none" } } function chooseId() { if (document.alternative_form.alternate[0].checked) { document.CREATEACCTFORM.userName.value = document.alternative_form.alternate[0].value } if (document.alternative_form.alternate[1].checked) { document.CREATEACCTFORM.userName.value = document.alternative_form.alternate[1].value } if (document.alternative_form.alternate[2].checked) { document.CREATEACCTFORM.userName.value = document.alternative_form.alternate[2].value } } function checkLocation() { var A = jQuery('select[name="currentloc"]').val(); if ((A == "") || (otherIDs.match("\\b" + A + "\\b") > 0)) { jQuery("#resetPR").hide(); if (A == "") { jQuery("#otherLoc").hide(); jQuery("#other_currentlocID").val("") } else { jQuery("#otherLoc").show(); jQuery("#other_currentlocID").val(""); hintEvent("OTHLOCATION", "HIDE") } } else { jQuery("#otherLoc").hide(); jQuery("#other_currentlocID").val("") } } function showEmail(E, H) { var B = ""; var G = jQuery("#ajax_flag").val(); var D = ""; var I = ""; if (G != "") { var F = G.split(":"); D = F[0]; I = F[1] } var A = jQuery("#email").val(); if (A != "") { var J = /^[a-zA-Z0-9_\.\-]+(\.[a-zA-Z0-9_\.\-]+)*@([a-zA-Z0-9_\.\-]+\.)+[a-zA-Z]{2,7}$/; if (!A.match(J)) { B = "" } else { if (!(D && I == A)) { var C = call_ajax(A, "showDiv", E, H) } else { B = "" } } } else { if (A = "") { B = "" } } return false } function call_ajax(email, call_back_func, domainflag, uidflg) { var xmlHTTP = false; var flag = true; var self = this; var email_to_chk = email; var email_chk_flag = "0"; var email_vrfy_flag = "1"; var url = "ajx_chk_email.html?email=" + email_to_chk + "&flg=" + domainflag + "&uidexist=" + uidflg; self.xmlHTTP = getXMLHttpObject(); if (self.xmlHTTP == null) { alert("No support for AJAX !!") } self.xmlHTTP.open("POST", url, true); self.xmlHTTP.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); self.xmlHTTP.send(null); setTimeout(function () { self.xmlHTTP.abort() }, 10000); self.xmlHTTP.onreadystatechange = function () { if (self.xmlHTTP.readyState == 4) { var responseTxt = self.xmlHTTP.responseText; if (responseTxt == "email exist") { eval(call_back_func + "(1,email_to_chk,'')") } else { var args = responseTxt.split("~"); if (args[0] == "not exist") { if (args[1] == "Invalid email address") { eval(call_back_func + "(0,'',email_vrfy_flag)") } else { eval(call_back_func + "(0,email_to_chk,0)") } } } } } } function getXMLHttpObject() { var B; try { B = new XMLHttpRequest() } catch (A) { try { B = new ActiveXObject("Msxml2.XMLHTTP") } catch (A) { B = new ActiveXObject("Microsoft.XMLHTTP") } } return B } function showDiv(A, B, E) { var C = "http://media." + baseserver; if (window.location.protocol.indexOf("https:") == 0) { C = "https://media4." + baseserver } if (A) { jQuery("#box1").show(); var D = '<div class="f_h2">' + B + ' is already registered with us.</div><div class="f_h2"> <a class="link" href="http://my.' + baseserver + '/login.html">Sign In</a> to your existing account or <a class="link"  href="javascript:void(0);" onclick="showOverlay(\'password\')" >Click Here</a> to retrieve password.,</div><div class="f_h2">OR You may choose to continue registering with the same email address</div>'; jQuery("#email_msg").html(D); jQuery('input[name="dup_email"]').val(1) } else { if (E) { jQuery("#box1").slideDown(); jQuery("#email_msg").html('<a href="javascript:void(0);" onclick="emailContinue();"><img src="' + C + '/monster_2012/btn_continued.jpg" width="86" height="28" border="0" align="right" /></a><span class="bold">Your Email Address seems invalid. Please recheck.') } else { jQuery("#box1").slideUp(); jQuery("#email_msg").html("") } } } function emailContinue() { jQuery("#box1").slideUp(); jQuery("#email_msg").html(""); jQuery("#emailverify1").hide(); jQuery('input[name="firstName"]').focus() } function validateForm() { var C = ""; var B = document.getElementById("emailId").value; var D = document.getElementById("emailId").value; D = D.replace(/\^ +/g, ""); D = D.replace(/ +\$/g, ""); var A = '<br>(Error in "' + D + '")'; if (B == "") { C = mailmsg } else { if (!isEmail(D)) { C = validemail + ' "user@companyname.com" ' + A } } if (C) { MJS.SKR.showAlertOnDHTML({ MSG: C, ID: "errMsgOnDHTML", SUCCESS: 0 }); document.getElementById("emailId").focus() } else { sendReq() } return false } function isEmail(B) { var A = 1; var C = B.length; while ((A < C) && (B.charAt(A) != "@")) { A++ } if ((A >= C) || (B.charAt(A) != "@")) { return false } else { A += 2 } while ((A < C) && (B.charAt(A) != ".")) { A++ } if ((A >= C - 1) || (B.charAt(A) != ".")) { return false } else { return true } } function sendReq() { var C = { email: document.getElementById("emailId").value, page: "create", crt_act: "1" }; var B = { func: "forgotPassword", req_src: "ajax", field: "params", value: YAHOO.lang.JSON.stringify(C) }; var A = MJS.AJAX.createPostStr(B); var D; var F = "forgot_password.html"; callback = { success: function (H) { if (H.responseText != undefined) { var G = YAHOO.lang.JSON.parse(H.responseText); if (G.FLAG == 1) { document.getElementById("errMsgOnDHTML").innerHTML = ""; document.getElementById("mainHTML").innerHTML = ""; document.getElementById("mainHTML").innerHTML = G.ERRMSG } else { MJS.SKR.showAlertOnDHTML({ MSG: G.ERRMSG, ID: "errMsgOnDHTML", SUCCESS: G.FLAG }) } } }, failure: function (G) { MJS.SKR.showAlertOnDHTML("Request Not Completed") }, cache: false }; var E = YAHOO.util.Connect.asyncRequest("POST", F, callback, A) } function showOverlay(D) { MJS.SKR.actionOnOverLay({ TAG_ID: "forgotUserPass", ACTION: "OPEN" }); var C = ""; if (D == "password") { C = "Password" } var A = { func: "showForgotPasswordForm", req_src: "ajax" }; var B = document.getElementById("email").value; var E = "forgot_password.html?req_src=ajax&new=1&email=" + B + "&func=showForgotPasswordForm"; MJS.SKR.loadPageContentInTag({ METHOD: "POST", URL: E, POPUP_TITLE: "Forgot " + C, TAG_ID: "forgotUserPass", CACHE: 0, ON_CLOSE_POPUP_ACTIVE_BG: 1, ALERT_MSG_TAG_ID: "errMsgOnDHTML" }) } function hideprstatus() { hintEvent("PR_STATUS", "HIDE") } function display_pop_up1(A) { alert(A) } function file_name_only(B) { var A = "/"; if (B.match(/\\/)) { A = "\\" } return B.substring(B.lastIndexOf(A) + 1, B.lastIndexOf(".html")) } function dispInventry(B, F, C, E) { var G = new Array(); var D = 2; var A; var I; if ($('input[name="industry"]:checked').length > 0) { ind_val = getindustry_val(); I = ind_val.split(","); if (typeof catLocArray.industry == "undefined") { if (B) { B = B.replace(/^,|,$/); catLocArray.industry = B.split(","); if (catLocArray.industry.length < 2) { catLocArray.industry = I } } } if (I.length > D) { for (i = 0; i < I.length; i++) { id1 = I[i]; if ($.inArray(id1, catLocArray.industry) == -1) { jQuery("input[name='industry']").filter("[value=" + id1 + "]").attr("checked", false); jQuery("#other_ind_" + id1 + "_check").removeClass("selected"); jQuery("#ind_input").val("2"); jQuery("#selected_ind .main_header .text").html("You have selected 2 Item(s)"); jQuery('.selected_items_inner .selected_item[data-id="other_ind_' + id1 + '"]').remove() } } G.push("You can select maximum " + D + " locations."); A = "You can select maximum " + D + " Industries." } else { catLocArray.industry = I } hintEvent("CUR_INDUSTRY", "HIDE") } var H; if ($('input[name="jobCategory"]:checked').length > 0) { cat_val = getfunction_val(); H = cat_val.split(","); if (typeof catLocArray.cat == "undefined") { if (F) { F = F.replace(/^,|,$/); catLocArray.cat = F.split(","); if (catLocArray.cat.length < 2) { catLocArray.cat = H } } } if (H.length > D) { for (i = 0; i < H.length; i++) { catid = H[i]; if ($.inArray(catid, catLocArray.cat) == -1) { jQuery("input[name='jobCategory']").filter("[value=" + catid + "]").attr("checked", false); jQuery("#other_cat_" + catid + "_check").removeClass("selected"); jQuery("#cat_input").val("2"); jQuery("#selected_cat .main_header .text").html("You have selected 2 Item(s)"); jQuery('.selected_items_inner .selected_item[data-id="other_cat_' + catid + '"]').remove() } } G.push("You can select maximum " + D + " categories/functions."); A = "You can select maximum " + D + " categories/functions." } else { catLocArray.cat = H } hintEvent("CATEGORY", "HIDE") } if (G.length > 0) { display_pop_up1(A); return false } } function display_other_mcollege() { var B = fancyItems.mcollege.getSelected(); var A = B.toLowerCase(); if (A == "other") { document.getElementById("mcollage_other").style.display = "" } else { document.getElementById("mcollage_other").style.display = "none" } } function womenstatus() { objChked = document.CREATEACCTFORM.gender; var B; for (var A = 0; A < objChked.length; A++) { if (objChked[A].checked) { if (objChked[A].value == "f") { if (document.getElementById("women_show")) { document.getElementById("women_show").style.display = "" } } else { if (document.getElementById("women_show")) { document.getElementById("women_show").style.display = "none" } } hintEvent("GENDER1", "HIDE") } } } function populate_subType1(O, A, N, Q, C, P) { var G; if (C == "editResumeForm" || C == "createform") { if (P == "load") { G = O } else { G = fancyItems[O].getSelected() } } else { G = fancyItems[O].getSelected() } if (G > 0) { document.getElementById(Q).innerHTML = ""; var L = new Array(); var M = ""; M = tp[G]; var F = ""; var I = 0; var B = Q + "_tr"; if (M != undefined && (M != "" || M != 0)) { L = M.split(","); var D = ""; if (A == "infirm_SubType2") { D = '<select id="' + A + '" name="' + A + '" onchange="other_infirmity_subtypelevel();">' } else { if (A == "infirm_SubType1") { D = '<select id="' + A + '" name="' + A + '" onchange="other_infirmity_subtype();">' } } D += '<option value="0"> - Select - </option>'; for (var J = 0; J < L.length; J++) { var E = L[J]; var K = subtp[E]; I++; var H = ""; if (E == N) { H = " selected = true" } D += '<option value="' + E + '"' + H + ">" + K + "</option>" } D += "</select>"; document.getElementById(Q).innerHTML = D; document.getElementById(B).style.display = ""; if (A == "infirm_SubType2") { fancyItems.infirm_SubType2 = new Mons.SelectionMenu({ element_id: "infirm_SubType2", onchange_callback: other_infirmity_subtypelevel, properties: { "button-min-width": 100, "button-max-width": 100, "overlay-min-width": 120, "overlay-max-width": 120, max_rows: 10, "button-background-color": "#FFFFFF" } }) } if (A == "infirm_SubType1") { fancyItems.infirm_SubType1 = new Mons.SelectionMenu({ element_id: "infirm_SubType1", onchange_callback: other_infirmity_subtype, properties: { "button-min-width": 100, "button-max-width": 100, "overlay-min-width": 120, "overlay-max-width": 120, max_rows: 10, "button-background-color": "#FFFFFF" } }) } } else { document.getElementById(B).style.display = "none" } } else { if (A == "infirm_SubType2") { fancyItems.infirm_SubType2 = new Mons.SelectionMenu({ element_id: "infirm_SubType2", properties: { "button-min-width": 100, "button-max-width": 100, "overlay-min-width": 120, "overlay-max-width": 120, max_rows: 10, "button-background-color": "#FFFFFF" } }) } if (A == "infirm_SubType1") { fancyItems.infirm_SubType1 = new Mons.SelectionMenu({ element_id: "infirm_SubType1", properties: { "button-min-width": 100, "button-max-width": 100, "overlay-min-width": 120, "overlay-max-width": 120, max_rows: 10, "button-background-color": "#FFFFFF" } }) } var D = "<select id=" + A + " name=" + A + ">"; D += '<option value="-1"> - Select - </option></select>'; document.getElementById(Q).innerHTML = D } } function populate_countryname1(O, M, Q, K, I) { var D = nationstr.split("|"); var N = new Array(); for (var P = 0; P < D.length; P++) { var B = D[P].split(":"); N[B[0]] = B[1] } var J = { US: "United States", UK: "United Kingdom", Hongkong: "Hong Kong" }; var L; var H; var C; var E; if (M == "") { if (jQuery("#" + I).val() != "") { E = jQuery("#" + I).val() } } else { E = M } if (Q == "") { if (jQuery('select[name="nationality"]').val() != "") { C = jQuery('select[name="nationality"]').val() } } else { C = Q } var F = ""; if (E) { obj = YAHOO.lang.JSON.parse(countrystr); for (var R in obj) { if (R != "undefined" && R == E) { for (var A in obj[R]) { F = A } L = obj[R][F]; break } } } if (C) { H = N[C] } if (H != undefined && L != undefined) { if (J[L] != undefined) { L = J[L] } if (H == L) { jQuery("#resetPR").slideUp() } else { countryobj = YAHOO.lang.JSON.parse(jsonstr); if (O == "change") { K = "" } var G; if (typeof countryobj[1][F] != "undefined") { G = workauthhtml1(1, K, L) } else { if (typeof countryobj[2][F] != "undefined") { G = workauthhtml1(2, K, L) } else { if (typeof countryobj[3][F] != "undefined") { G = workauthhtml1(3, K, L) } else { G = workauthhtml1(2, K, L) } } } jQuery("#wa_msg").html("Do you have a work visa for: <strong>" + L + "</strong>"); jQuery("#wa_msg").show(); jQuery("#prstatus_container").show(); jQuery("#resetPR").show(); if (document.getElementById("setpr")) { check_pr_status() } } } else { jQuery("#resetPR").hide() } } function workauthhtml1(J, D, B) { var I = ""; var G = ""; var H = new Array(); var E = {}; var C = ""; H.push({ id: "", values: "Select" }); var A = JSON.stringify(workAuthData); var F = JSON.parse(A); $.each(F[J], function (L, M) { $.each(M, function (O, N) { if (J == 1) { H.push({ id: O, values: N }) } if (J == 2) { classname_yes = ""; classname_no = ""; checkedYes = ""; checkedNo = ""; if (D == 2) { checkedYes = "checked"; classname_yes = "active" } if (D == 4) { checkedNo = "checked"; classname_no = "active" } I = '<input type="radio" name="prstatus" value="2" class="custom_radio" id="prstatus1" onChange="hideprstatus();"><div for="prstatus1" class="radiolabel ' + classname_yes + '" data-id="prstatus1" ' + checkedYes + ' id="prstatus1_label" tabindex="1">Yes</div><input type="radio" name="prstatus" class="custom_radio" id="prstatus2" value="4" onChange="hideprstatus();"><div for="prstatus2" class="radiolabel ' + classname_no + '" data-id="prstatus2" ' + checkedNo + ' id="prstatus2_label" tabindex="1">No</div>' } if (J == 3) { if (O != 11) { H.push({ id: O, values: N }) } else { if (B == "Saudi Arabia" && O == 11) { H.push({ id: 11, values: N }) } } } }) }); var K = sortByKey(H, "id"); if (J == 2) { jQuery("#visa2").hide(); jQuery("#visa1").html(I); jQuery("#visa1").show() } else { jQuery("#wa_msg").css("width:290px;margin-right:5px;line-height:34px;color:#686868;"); jQuery("#visa1").hide(); jQuery("#visa1").html(""); createSingleSelectCombo({ id: "prstatus", valueVariableName: "prstatus", tabindex: "8", monstab: "8", label: "Select", replaceWithId: "visa_container", width: "220", numColumns: "1", heightOptions: "height:120px; overflow-y:auto", options: K, preSelected: D, onChange: hideprstatus }); jQuery("#visa2").show() } H = [] } function check_pr_status() { var C = document.getElementById("setpr").value; if (C) { var B = document.CREATEACCTFORM.prstatus; var A = B.length; for (s = 0; s < A; s++) { if (C == B[s].value) { B[s].checked = true } } } } function sortByKey(B, A) { return B.sort(function (E, D) { var C = E[A]; var F = D[A]; return ((C < F) ? -1 : ((C > F) ? 1 : 0)) }) } var sortObjectByKey = function (C) { var B = []; var D = {}; for (var A in C) { if (C.hasOwnProperty(A)) { B.push(A) } } B.sort(); jQuery.each(B, function (F, E) { D[E] = C[E] }); return D }; function dobCheck() { dob = jQuery("#birthday").val(); var C = dob.split("/"); var D = new Date(); var E = new Date(C[2], C[1] - 1, C[0]); dayval = C[0]; monthval = C[1]; yearval = C[2]; var B = 1000 * 60 * 60 * 24; var A = Math.ceil((E.getTime() - D.getTime()) / (B)); if ((dayval > 0) || (monthval > 0) || (monthval > 0)) { jsDay = E.getDate(); jsMonth = E.getMonth() + 1; jsYear = E.getFullYear(); if (!((jsDay == dayval) && (jsMonth == monthval) && (jsYear == yearval))) { return false } } if (A > 0 || A == -1) { return false } return true } function populate_isd(F) { var D = F.split(";"); var B = new Array(); var A = new Array(); var H = jQuery('select[name="currentloc"]').val(); var E = ""; for (var C = 0; C < D.length; C++) { var G = D[C].split(":"); A[G[0]] = G[2]; if (G[0] == H) { E = G[2] } } $("#mobile_isd").val(E) } function showUserskills() { jQuery.ajax({ type: "GET", url: "ajx_chk_skills.html?type=getuserskills", dataType: "text", success: function (A) { var C = '<div class="formele_row" style="width:292px;margin-top: 0px;border: 1px #d3d3d3 dotted;border-top: 0;padding: 4px;background: #dedede;">'; if (A) { skills = A.split(","); for (i = 0; i < skills.length; i++) { skillarr = skills[i].split(":"); var B = skillarr[0]; var D = skillarr[1]; C += '<div class="pf_skilltag_wrap left nocount" id="skill_' + D + '">' + B + '<span class="close_skill" onclick="removeskill(' + D + ",'" + B + "');\"></span></div>" } C += '<input type="hidden" name="all_skill" value="' + B + '" /><div class="clear_both"></div></div>'; jQuery("#showskills").html(C); jQuery("#showskills").css({ width: "499px", "margin-top": "0px", border: "1px #d3d3d3 dotted", "border-top": "0", padding: "4px", background: "#dedede" }) } } }) } function removeskill(E, A) { var C = $("#skills").val(); C = C.substring(0, C.length - 1); var B = C.split(","); B = jQuery.grep(B, function (F) { return (F == A) }); var D = B.join(", "); jQuery("#skills").val(D); jQuery("#skill_" + E).remove() };